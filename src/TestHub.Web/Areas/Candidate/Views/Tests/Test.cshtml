@model TestViewModel
@inject IPartialViewResolver Resolver

<section>
    <div class="container">
        <h3>@Model.Title</h3>
        <form id="Test" asp-action="Submit" method="post">
            @{
                if (Model.Questions is { } questions)
                {
                    for (int i = 0; i < questions.Count; i++)
                    {
                        <div class="question">
                            <input type="hidden" name="Index" value="@i">
                            <input type="hidden" name="[@i].Kind" value="@questions[i].Kind">
                            <input type="hidden" name="[@i].Id" value="@questions[i].Id">
                            <div class="row">
                                <div class="col-1 w-auto">
                                    <span>@(i + 1).</span>
                                </div>
                                <div class="col">
                                    @{ViewData["QuestionIndex"] = i;}
                                    @(await Html.PartialAsync(Resolver.GetPartialViewName(questions[i].GetType()), questions[i], ViewData))
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </form>
        <input type="submit" form="Test" value="Submit" />
    </div>
</section>