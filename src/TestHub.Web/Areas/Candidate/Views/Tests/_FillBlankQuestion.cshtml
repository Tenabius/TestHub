@using System.Text.RegularExpressions;
@model FillBlankQuestionViewModel

<div class="row">
    @Model.Directions
</div>
<div class="row">
    <div id="FillBlank-@Model.Id" class="col">
        @{
            if (Model.Context is { } context)
            {
                var blankRegEx = FillBlankQuestion.BlankTag;
                var substrings = blankRegEx.Split(context).ToList();
                substrings.RemoveAll(x => x == "");
                int j = 0;
                var innerIdRegEx = new Regex("\\d+");
                foreach (string substring in substrings)
                {
                    if (blankRegEx.IsMatch(substring))
                    {
                        int innerId = int.Parse(innerIdRegEx.Match(substring).Value);
                        if (Model.Blanks is { } blanks)
                        {
                            var blank = blanks.Find(blank => blank.InnerId == innerId);

                            <div class="dynamic-lenght-input-container">
                                <input type="hidden" name="[@ViewData["QuestionIndex"]].Blanks[@j].Id" value="@blank!.Id">
                                <span class="dynamic-lenght-input-span"></span>
                                <input type="text"
                                       class="dynamic-lenght-input"
                                       name="[@ViewData["QuestionIndex"]].Blanks[@j].SubmittedAnswer" />
                            </div>
                            j++;
                        }
                    }
                    else
                    {
                        @substring
                    }
                }
            }
        }
    </div>
</div>